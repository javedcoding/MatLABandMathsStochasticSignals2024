clear all
close all
clc;

% Parameters
%Calculation for the window length an = a + (n-1)*d
f = 1; % Frequency in Hz
Fs = 200; % Sampling frequency in Hz
N = 4000; % Number of samples 
t = (-(N/2):(N/2)-1)/Fs; % Time vector          

% Signal
y = sin(2*pi*f*t);

% (a)
%Plot the sinewave
figure;
subplot(2, 2, 1);
plot(t, y);
title("Sinewave")
xlim([-15 15])
xlabel("Time [s]")
ylabel("Amplitude")
grid;

% (b)
rect_Window = rectangularPulse(-5, 5, t);

%Plot the rectangular pulse data
subplot(2, 2, 2);
plot(t, rect_Window)
xlim([-10 10])
ylim([0 2])
title("Rectangular Window")
xlabel("Time [s]")
ylabel("Amplitude")
grid;

% Apply rectangular window on sine wave
rect_signal = y .* rect_Window;


% Plot the rectangled sinosuidal wave 
subplot(2, 2, 3);
plot(t, rect_signal)
xlim([-2.5 2.5])
title("Rectangled Sine Wave")
xlabel("Time [s]")
ylabel("Amplitude")
grid;

%Find the correlation
[correlationOfRectSignal, rectLags] = xcorr(rect_signal, 'biased');
tauRect = rectLags/Fs;

% (c)
%Plot the correlated signal
subplot(2, 2, 4)
plot(tauRect, correlationOfRectSignal)
xlim([-7 7])
title("Auto Correlation of RectPulse and Sinwave")
xlabel("normalized tauRect")
ylabel("y(t)*y(t)")
grid;



% Alternative way with RectWin
%Plot the sinewave
figure;
subplot(2, 2, 1);
plot(t, y);
title("Sinewave")
xlim([-15 15])
xlabel("Time [s]")
ylabel("Amplitude")
grid;

%Always remember the window length an = a + (n-1)*d
%Generate a rectangular window with length of number of samples
% window_length_rect = 3;
window_length_rect1 = 10;
rect_win1 = rectwin(window_length_rect1*Fs)';
rect_Window1 = [zeros(1, N/4) rectwin(window_length_rect1*Fs)' zeros(1, N/4)];
% rect_Window = [zeros(1, 1000) rectwin(window_length_rect*Fs)' zeros(1, 1000)];
% rect_Window = [zeros(1, N/4), rect_signal];
% rect_Window = [rect_signal, zeros(1, N/4)];


%Plot the Alternative rectangular pulse 
subplot(2, 2, 2);
plot(t, rect_Window1)
xlim([-10 10])
ylim([0 2])
title("Rectangular Window")
xlabel("Time [s]")
ylabel("Amplitude")
grid;


%Apply rectangular window on sine wave
rect_signal1 = y .* rect_Window1;


%Plot the Alternative Rectangular window data
subplot(2, 2, 3);
plot(t, rect_signal1)
xlim([-2.5 2.5])
title("Rectangled Sine Wave")
xlabel("Time [s]")
ylabel("Amplitude")
grid;


%Find the correlation
[correlationOfRectSignal1, rectLags1] = xcorr(rect_signal1, 'biased');
tauRect1 = rectLags1/Fs;

%Plot the correlated signal
subplot(2, 2, 4)
plot(tauRect1, correlationOfRectSignal1)
xlim([-7 7])
title("Auto Correlation of RectWin and Sinwave")
xlabel("normalized tauRect")
ylabel("y(t)*y(t)")
grid;


% Extra With Hamming WIndow

%Generate a hamming window with length of number of samples
% window_length_hamm = 3;
window_length_hamm = 10;
% hamm_Window = [zeros(1, 1000) hamming(window_length_hamm*Fs)' zeros(1, 1000)];
hamm_Window = [zeros(1, N/4) hamming(window_length_hamm*Fs)' zeros(1, N/4)];
% rect_signal = [zeros(1, N/4), rect_signal];
% rect_signal = [rect_signal, zeros(1, N/4)];

%Plot the sinewave again
figure;
subplot(2, 2, 1);
plot(t, y);
title("Sinewave")
xlim([-3.5 3.5])
xlabel("Time [s]")
ylabel("Amplitude")
grid;

%Plot the hamming window data
subplot(2, 2, 2);
plot(t, hamm_Window)
xlim([-2.5 2.5])
ylim([0 2])
title("Hamming Window")
xlabel("Time [s]")
ylabel("Amplitude")
grid;

%Apply hamming window on sine wave
hamm_signal = y .* hamm_Window;


%Plot the hammed sinosuidal wave 
subplot(2, 2, 3);
plot(t, hamm_signal)
xlim([-2.5 2.5])
title("Hammed Signal")
xlabel("Time [s]")
ylabel("Amplitude")
grid;

%Find the correlation
[correlationOfHammedSignal, hammLags] = xcorr(hamm_signal, 'biased');
tauHamm = hammLags/Fs;

%Plot the correlated signal
subplot(2, 2, 4)
plot(tauHamm, correlationOfHammedSignal)
xlim([-7 7])
title("Auto Correlation of HammWin and Sinwave")
xlabel("normalized tauHamm")
ylabel("y(t)*y(t)")
grid;
